/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 public/models/room/room-opt.glb 
*/

import { useEffect, useRef } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import * as THREE from "three";
import useStore from "@/store/store";

let floor_texture, currentTexture;

export function RoomJSX(props) {
  const selected = useStore((state) => state.selected);
  const meshMaterialRef = useRef(null);

  const { nodes, materials } = useGLTF("./models/room/room-opt.glb");

  const floor_texture_1 = useTexture({
    map: "./textures/wood/wood1/BaseColor.jpg",
    display: "./textures/wood/wood1/Height.jpg",
    normalMap: "./textures/wood/wood1/Normal.jpg",
    roughnessMap: "./textures/wood/wood1/Roughness.jpg",
    // aoMap: "./textures/wood/BaseColor.jpg",
  });
  floor_texture_1.map.repeat.set(2, 2);
  floor_texture_1.display.repeat.set(2, 2);
  floor_texture_1.normalMap.repeat.set(2, 2);
  floor_texture_1.map.repeat.set(2, 2);
  floor_texture_1.map.wrapS = floor_texture_1.map.wrapT = THREE.RepeatWrapping;
  floor_texture_1.display.wrapS = floor_texture_1.display.wrapT =
    THREE.RepeatWrapping;
  floor_texture_1.normalMap.wrapS = floor_texture_1.normalMap.wrapT =
    THREE.RepeatWrapping;
  floor_texture_1.roughnessMap.wrapS = floor_texture_1.roughnessMap.wrapT =
    THREE.RepeatWrapping;

  const floor_texture_2 = useTexture({
    map: "./textures/wood/wood2/BaseColor.jpg",
    display: "./textures/wood/wood2/Height.jpg",
    normalMap: "./textures/wood/wood2/Normal.jpg",
    roughnessMap: "./textures/wood/wood2/Roughness.jpg",
    aoMap: "./textures/wood/wood2/aoMap.jpg" || "",
  });
  floor_texture_2.map.repeat.set(2, 2);
  floor_texture_2.display.repeat.set(2, 2);
  floor_texture_2.normalMap.repeat.set(2, 2);
  floor_texture_2.map.repeat.set(2, 2);
  floor_texture_2.map.wrapS = floor_texture_2.map.wrapT = THREE.RepeatWrapping;
  floor_texture_2.display.wrapS = floor_texture_2.display.wrapT =
    THREE.RepeatWrapping;
  floor_texture_2.normalMap.wrapS = floor_texture_2.normalMap.wrapT =
    THREE.RepeatWrapping;
  floor_texture_2.roughnessMap.wrapS = floor_texture_2.roughnessMap.wrapT =
    THREE.RepeatWrapping;

  const floor_texture_3 = useTexture({
    map: "./textures/wood/wood3/BaseColor.jpg",
    display: "./textures/wood/wood3/Height.jpg",
    normalMap: "./textures/wood/wood3/Normal.jpg",
    roughnessMap: "./textures/wood/wood3/Roughness.jpg",
    aoMap: "./textures/wood/wood3/aoMap.jpg",
  });
  floor_texture_3.map.repeat.set(2, 2);
  floor_texture_3.display.repeat.set(2, 2);
  floor_texture_3.normalMap.repeat.set(2, 2);
  floor_texture_3.map.repeat.set(2, 2);
  floor_texture_3.map.wrapS = floor_texture_3.map.wrapT = THREE.RepeatWrapping;
  floor_texture_3.display.wrapS = floor_texture_3.display.wrapT =
    THREE.RepeatWrapping;
  floor_texture_3.normalMap.wrapS = floor_texture_3.normalMap.wrapT =
    THREE.RepeatWrapping;
  floor_texture_3.roughnessMap.wrapS = floor_texture_3.roughnessMap.wrapT =
    THREE.RepeatWrapping;

  const textureMapping = {
    mahogany: floor_texture_2,
    walnut: floor_texture_3,
    oak: floor_texture_1,
  };

  useEffect(() => {
    const currentTexture = textureMapping[selected];

    if (meshMaterialRef.current && currentTexture) {
      meshMaterialRef.current.map = currentTexture?.map;
      meshMaterialRef.current.needsUpdate = true;
    }
    console.log(meshMaterialRef.current);
  }, [selected]);

  return (
    <group {...props} dispose={null}>
      <group
        position={[504.314, 86.671, -422.143]}
        rotation={[-Math.PI / 2, 0, -2.188]}
        scale={100}
      >
        <mesh
          geometry={nodes.Chair_Chair_bolts_0.geometry}
          material={materials.Chair_bolts_Bake}
        />
        <mesh
          geometry={nodes.Chair_Chair_Leg_0.geometry}
          material={materials.Chair_Leg_Bake}
        />
        <mesh
          geometry={nodes.Chair_Chair_seat_0.geometry}
          material={materials.Chair_seat_Bake}
        />
      </group>
      <group
        position={[-231.654, 37.583, 118.229]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      >
        <mesh
          geometry={nodes.Drawer_1_Drawer_0.geometry}
          material={materials.Drawer_Bake}
          // visible={false}
        />
        <mesh
          geometry={nodes.Drawer_1_Drawer_handle_0.geometry}
          material={materials.Drawer_handle_Bake}
        />
        <mesh
          geometry={nodes.Drawer_1_Drawer_legs_0.geometry}
          material={materials.Drawer_legs_Bake}
        />
      </group>
      <group
        position={[236.27, 37.583, 118.229]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      >
        <mesh
          geometry={nodes.Drawer_2_Drawer_0.geometry}
          material={materials.Drawer_Bake}
        />
        <mesh
          geometry={nodes.Drawer_2_Drawer_handle_0.geometry}
          material={materials.Drawer_handle_Bake}
        />
        <mesh
          geometry={nodes.Drawer_2_Drawer_legs_0.geometry}
          material={materials.Drawer_legs_Bake}
        />
      </group>
      <group
        position={[-233.028, 74.371, 122.435]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      >
        <mesh
          geometry={nodes.Lamp_1_Lamp_head_0.geometry}
          material={materials.Lamp_head_Bake}
        />
        <mesh
          geometry={nodes.Lamp_1_Lamp_stand_0.geometry}
          material={materials.Lamp_stand_Bake}
        />
        <mesh
          geometry={nodes.Lamp_1_Lamp_wire_0.geometry}
          material={materials.Lamp_wire_Bake}
        />
      </group>
      <group
        position={[234.896, 74.371, 122.435]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      >
        <mesh
          geometry={nodes.Lamp_2_Lamp_head_0.geometry}
          material={materials.Lamp_head_Bake}
        />
        <mesh
          geometry={nodes.Lamp_2_Lamp_stand_0.geometry}
          material={materials.Lamp_stand_Bake}
        />
        <mesh
          geometry={nodes.Lamp_2_Lamp_wire_0.geometry}
          material={materials.Lamp_wire_Bake}
        />
      </group>
      <mesh
        geometry={nodes._Curtain_1_Curtain_0.geometry}
        material={materials.Curtain_Bake}
        position={[590.872, 264.771, -299.977]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.Bed_Bed_0.geometry}
        material={materials.material_Bake}
        position={[0.197, 20.914, -23.821]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={[158.336, 171.85, 23.735]}
      />
      <mesh
        geometry={nodes.Blanket_Blanket_0.geometry}
        material={materials.Blanket_Bake}
        position={[0.726, 67.622, -65.148]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.Curtain__2_Curtain_0.geometry}
        material={materials.Curtain_Bake}
        position={[-82.136, 264.771, -585.281]}
        rotation={[-Math.PI / 2, 0, Math.PI / 2]}
        scale={100}
      />
      <mesh
        geometry={nodes.Curtain_bar_1__0.geometry}
        material={materials.Curtain_bar_1__0_Bake}
        position={[602.258, 368.015, -298.759]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.Curtain_bar_2__0.geometry}
        material={materials.Curtain_bar_1__0_Bake}
        position={[-80.917, 368.015, -596.667]}
        rotation={[-Math.PI / 2, 0, Math.PI / 2]}
        scale={100}
      />
      <mesh
        geometry={nodes.Curtain_holders_1_Curtain_holders_0.geometry}
        material={materials.Curtain_holders_Bake}
        position={[590.056, 366.315, -387.131]}
        rotation={[0, 0, Math.PI / 2]}
        scale={5.086}
      />
      <mesh
        geometry={nodes.Curtain_holders_2_Curtain_holders_0.geometry}
        material={materials.Curtain_holders_Bake}
        position={[-169.29, 366.315, -584.465]}
        rotation={[Math.PI / 2, Math.PI / 2, 0]}
        scale={5.086}
      />
      <mesh
        geometry={nodes.Floor_Floor_0.geometry}
        // material={materials.Floor_Bake}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
        // visible={false}
      >
        <meshStandardMaterial ref={meshMaterialRef} {...currentTexture} />
      </mesh>
      <mesh
        geometry={nodes.Laptop_Laptop_0.geometry}
        material={materials.Laptop_Bake}
        position={[452.573, 123.115, -558.636]}
        rotation={[-Math.PI / 2, 0, -0.522]}
        scale={100}
      />
      <mesh
        geometry={nodes.Laptop_keyboard_Laptop_keyboard_0.geometry}
        material={materials.Laptop_keyboard_Bake}
        position={[443.094, 109.443, -542.154]}
        rotation={[-Math.PI / 2, 0, -0.522]}
        scale={100}
      />
      <mesh
        geometry={nodes.Laptop_screen_Laptop_screen_0.geometry}
        material={materials.Laptop_screen_Bake}
        position={[452.573, 123.115, -558.636]}
        rotation={[-Math.PI / 2, 0, -0.522]}
        scale={100}
      />
      <mesh
        geometry={nodes.Matress_Matress_0.geometry}
        material={materials.Matress_Bake}
        position={[0.197, 56.387, -19.032]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.Pillow_1_Pillow_0.geometry}
        material={materials.Pillow_Bake}
        position={[88.731, 82.75, 111.58]}
        rotation={[-Math.PI / 2, 0.034, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.Pillow_2_Pillow_0.geometry}
        material={materials.Pillow_Bake}
        position={[-79.089, 82.75, 111.58]}
        rotation={[-Math.PI / 2, -0.057, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.Table_Table_0.geometry}
        material={materials.Table_Bake}
        position={[449.413, 104.88, -540.466]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.Table_legs_Table_legs_0.geometry}
        material={materials.Table_legs_Bake}
        position={[449.413, 83.941, -540.466]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.Wall_marble_Material002_0.geometry}
        material={materials["Material.002_Bake"]}
        position={[0, 189.017, 164.858]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
        // visible={false}
      />
      <mesh
        geometry={nodes.Wall_outside_Wall_outside_0.geometry}
        material={materials.Wall_outside_Bake}
        position={[858.701, 189.017, 578.636]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={[1192.902, 17.853, 198.682]}
        // visible={false}
      />
      <mesh
        geometry={nodes.Walls_Wall_0.geometry}
        material={materials.Wall_Bake}
        position={[-1.846, 323.764, -66.151]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
        // visible={false}
      />
    </group>
  );
}

useGLTF.preload("./models/room/room-opt.glb");
